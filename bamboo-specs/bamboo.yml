---
version: 2
plan:
  project-key: ODSRV
  key: OPV
  name: Oneclient packages
  description: Build intermediate oneclient-base package and Docker for reference platform (Ubuntu Xenial) and self-contained oneclient packages for all platforms.
stages:
- Build:
    description: Build packages
    manual: false
    final: false
    jobs:
    - Build fs-onedatafs Focal package
    - Build fs-onedatafs CentOS package
    - Build onedatafs-jupyter CentOS package
    - Build onedatafs-jupyter Focal package
    - Build oneclient-base and onedatafs Focal packages
    - Build oneclient-base and onedatafs CentOS packages
- Test OnedataFS:
    description: Test created packages
    manual: false
    final: false
    jobs:
    - Test fs-onedatafs
- Publish packages:
    manual: false
    final: false
    jobs:
    - Publish Oneclient base package
- Publish dockers:
    manual: false
    final: false
    jobs:
    - Publish Oneclient base docker
- Build Oneclient binary archive:
    description: Build Oneclient self-contained archive with filesystem structure
    manual: false
    final: false
    jobs:
    - Build oneclient archive
- Build oneclient packages:
    description: Build self-contained Oneclient packages using FPM
    manual: false
    final: false
    jobs:
    - Oneclient Ubuntu Xenial
    - Oneclient Ubuntu Focal
    - Oneclient Ubuntu Trusty
    - Oneclient Ubuntu Bionic
    - Oneclient CentOS7
    - Oneclient Ubuntu Jammy
- Test Oneclient:
    description: Test Oneclient packages
    manual: false
    final: false
    jobs:
    - Test Oneclient packages
- Publish Oneclient packages:
    manual: false
    final: false
    jobs:
    - Publish Oneclient packages
- Publish Oneclient docker:
    manual: false
    final: false
    jobs:
    - Publish Oneclient docker
Build fs-onedatafs Focal package:
  key: BFBP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        DISTRIBUTION=focal \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        make deb_fsonedatafs
      description: Build Oneclient Base and OnedataFS Xenial
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf focal-fsonedatafs.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: focal-fsonedatafs.tar.gz
    pattern: focal-fsonedatafs.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Build fs-onedatafs CentOS package:
  key: BFCP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        DISTRIBUTION=centos-7-x86_64 \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        RETRIES=3 \
        make rpm_fsonedatafs
      description: Build Oneclient Base and OnedataFS CentOS
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf centos7-fsonedatafs.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: centos7-fsonedatafs.tar.gz
    pattern: centos7-fsonedatafs.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Build onedatafs-jupyter CentOS package:
  key: BOCP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        DISTRIBUTION=centos-7-x86_64 \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        RETRIES=3 \
        make rpm_onedatafs_jupyter
      description: Build Oneclient Base and OnedataFS Xenial
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf centos7-onedatafs-jupyter.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: centos7-onedatafs-jupyter.tar.gz
    pattern: centos7-onedatafs-jupyter.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Build onedatafs-jupyter Focal package:
  key: BOBP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        DISTRIBUTION=focal \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        make deb_onedatafs_jupyter
      description: Build Oneclient Base and OnedataFS Xenial
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf focal-onedatafs-jupyter.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: focal-onedatafs-jupyter.tar.gz
    pattern: focal-onedatafs-jupyter.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Build oneclient-base and onedatafs Focal packages:
  key: BOOBP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        echo DISTRIBUTION=focal \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        make deb_oneclient_base

        DISTRIBUTION=focal \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        make deb_oneclient_base
      description: Build Oneclient Base and OnedataFS Xenial
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf focal-oneclient-base.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: focal-oneclient-base.tar.gz
    pattern: focal-oneclient-base.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Build oneclient-base and onedatafs CentOS packages:
  key: BOOCP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        DISTRIBUTION=centos-7-x86_64 \
        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        RETRIES=3 \
        make rpm_oneclient_base
      description: Build Oneclient Base and OnedataFS CentOS
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf centos7-oneclient-base.tar.gz package
      description: Package
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: centos7-oneclient-base.tar.gz
    pattern: centos7-oneclient-base.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  - onedata-pkg-builder
  artifact-subscriptions: []
Test fs-onedatafs:
  key: TEST
  description: Test onedatafs PyFilesystem python module installation
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v

        make submodule=bamboos submodules
      description: Init submodules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        tar -xzf focal-oneclient-base.tar.gz
        tar -xzf centos7-oneclient-base.tar.gz
        tar -xzf focal-fsonedatafs.tar.gz
        tar -xzf centos7-fsonedatafs.tar.gz
      description: Unpack package artifacts
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - make test_fsonedatafs_packaging
      description: Test fs-onedatafs packaging
  final-tasks:
  - test-parser:
      type: junit
      ignore-time: 'false'
      test-results: test-reports/results.xml
      description: Parse test results
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  requirements:
  - onedata
  artifact-subscriptions:
  - artifact: centos7-oneclient-base.tar.gz
  - artifact: centos7-fsonedatafs.tar.gz
  - artifact: focal-fsonedatafs.tar.gz
  - artifact: focal-oneclient-base.tar.gz
Publish Oneclient base package:
  key: PD
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules

        # Check if the repo contains RELEASE file containing major Onedata release tag (e.g. 1802)
        # If not publish to legacy repositories
        if test -f RELEASE; then
            RELEASE=$(cat RELEASE)
            ./pkg.py --host docker_packages_devel --release $RELEASE push focal-oneclient-base.tar.gz
            mv pkg-list.json focal-pkg-list.json
            ./pkg.py --host docker_packages_devel --release $RELEASE push centos7-oneclient-base.tar.gz
            mv pkg-list.json centos7-pkg-list.json
            ./pkg.py --host docker_packages_devel --release $RELEASE push focal-fsonedatafs.tar.gz
            mv pkg-list.json focal-fsonedatafs-pkg-list.json
            ./pkg.py --host docker_packages_devel --release $RELEASE push centos7-fsonedatafs.tar.gz
            mv pkg-list.json centos7-fsonedatafs-pkg-list.json
            ./pkg.py --host docker_packages_devel --release $RELEASE push focal-onedatafs-jupyter.tar.gz
            mv pkg-list.json focal-onedatafs-jupyter-pkg-list.json
            ./pkg.py --host docker_packages_devel --release $RELEASE push centos7-onedatafs-jupyter.tar.gz
            mv pkg-list.json centos7-onedatafs-jupyter-pkg-list.json
        else
            ./pkg.py --host docker_packages_devel push xenial-oneclient-base.tar.gz
            mv pkg-list.json xenial-pkg-list.json
        fi
      description: Publish
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: xenial-pkg-list.json
    pattern: xenial-pkg-list.json
    shared: true
    required: false
  - name: centos7-pkg-list.json
    pattern: centos7-pkg-list.json
    shared: true
    required: false
  - name: centos7-fsonedatafs-pkg-list.json
    pattern: centos7-fsonedatafs-pkg-list.json
    shared: true
    required: false
  - name: xenial-fsonedatafs-pkg-list.json
    pattern: xenial-fsonedatafs-pkg-list.json
    shared: true
    required: false
  - name: focal-fsonedatafs-pkg-list.json
    pattern: focal-fsonedatafs-pkg-list.json
    shared: true
    required: false
  - name: focal-pkg-list.json
    pattern: focal-pkg-list.json
    shared: true
    required: false
  requirements:
  - publish_packages
  - onedata-quick
  artifact-subscriptions:
  - artifact: centos7-oneclient-base.tar.gz
  - artifact: centos7-fsonedatafs.tar.gz
  - artifact: focal-fsonedatafs.tar.gz
  - artifact: focal-oneclient-base.tar.gz
  - artifact: focal-onedatafs-jupyter.tar.gz
  - artifact: centos7-onedatafs-jupyter.tar.gz
Publish Oneclient base docker:
  key: BD
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION \
        make docker_oneclient_base
      description: Publish Oneclient base docker
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  requirements:
  - onedata
  artifact-subscriptions: []
Build oneclient archive:
  key: BOA
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make oneclient_tar

        make ones3_tar
      description: Build Oneclient binary archive
  artifacts:
  - name: oneclient-bin.tar.gz
    location: oneclient/package_fpm
    pattern: oneclient-bin.tar.gz
    shared: true
    required: false
  - name: ones3-bin.tar.gz
    location: oneclient/package_fpm
    pattern: ones3-bin.tar.gz
    shared: true
    required: false
  requirements:
  - onedata
  artifact-subscriptions: []
Oneclient Ubuntu Xenial:
  key: OUX
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules

        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make DISTRIBUTION=xenial oneclient_deb
        make DISTRIBUTION=xenial ones3_deb
      description: Build Oneclient Xenial package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf xenial-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: xenial-oneclient.tar.gz
    pattern: xenial-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Oneclient Ubuntu Focal:
  key: OUF
  description: Build Oneclient and OneS3 Ubuntu Focal package
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules

        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make DISTRIBUTION=focal oneclient_deb
        make DISTRIBUTION=focal ones3_deb
      description: Build Oneclient Focal package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf focal-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: focal-oneclient.tar.gz
    pattern: focal-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Oneclient Ubuntu Trusty:
  key: OUT
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules

        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make DISTRIBUTION=trusty oneclient_deb
        make DISTRIBUTION=trusty ones3_deb
      description: Build Oneclient Ubuntu Trusty package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf trusty-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: trusty-oneclient.tar.gz
    pattern: trusty-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Oneclient Ubuntu Bionic:
  key: OUB
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules

        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make DISTRIBUTION=bionic oneclient_deb
        make DISTRIBUTION=bionic ones3_deb
      description: Build Oneclient Xenial package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf bionic-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: bionic-oneclient.tar.gz
    pattern: bionic-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Oneclient CentOS7:
  key: OC
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules

        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        make DISTRIBUTION=centos-7-x86_64 oneclient_rpm
        make DISTRIBUTION=centos-7-x86_64 ones3_rpm
      description: Build Oneclient CentOS 7 package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf centos7-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: centos7-oneclient.tar.gz
    pattern: centos7-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Oneclient Ubuntu Jammy:
  key: OUJ
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
        make submodule=oneclient submodules
        mkdir oneclient/package_fpm
        mv oneclient-bin.tar.gz oneclient/package_fpm/oneclient-bin.tar.gz
        mv ones3-bin.tar.gz oneclient/package_fpm/ones3-bin.tar.gz
      description: Build modules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e
        make DISTRIBUTION=jammy oneclient_deb
        make DISTRIBUTION=jammy ones3_deb
      description: Build Oneclient Jammy package
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - tar -chzf jammy-oneclient.tar.gz package
      description: Package
  artifacts:
  - name: jammy-oneclient.tar.gz
    pattern: jammy-oneclient.tar.gz
    shared: true
    required: false
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: oneclient-bin.tar.gz
  - artifact: ones3-bin.tar.gz
Test Oneclient packages:
  key: TOP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules
      description: Init submodules
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        tar -xzf centos7-oneclient.tar.gz
        tar -xzf trusty-oneclient.tar.gz
        tar -xzf xenial-oneclient.tar.gz
        tar -xzf bionic-oneclient.tar.gz
        tar -xzf focal-oneclient.tar.gz
        tar -xzf jammy-oneclient.tar.gz
      description: Unpack package artifacts
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - make test_oneclient_packaging
      description: Test oneclient packaging
  final-tasks:
  - test-parser:
      type: junit
      ignore-time: 'false'
      test-results: test-reports/results.xml
      description: Parse test results
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  requirements:
  - system.docker.executable
  - onedata
  artifact-subscriptions:
  - artifact: centos7-oneclient.tar.gz
  - artifact: xenial-oneclient.tar.gz
  - artifact: trusty-oneclient.tar.gz
  - artifact: bionic-oneclient.tar.gz
  - artifact: focal-oneclient.tar.gz
  - artifact: jammy-oneclient.tar.gz
Publish Oneclient packages:
  key: POP
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        set -e

        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodule=bamboos submodules

        # Check if the repo contains RELEASE file containing major Onedata release tag (e.g. 1802)
        # If not publish to legacy repositories
        if test -f RELEASE; then
          RELEASE=$(cat RELEASE)
          ./pkg.py --host docker_packages_devel --release $RELEASE push centos7-oneclient.tar.gz
          mv pkg-list.json centos7-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel --release $RELEASE push xenial-oneclient.tar.gz
          mv pkg-list.json xenial-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel --release $RELEASE push bionic-oneclient.tar.gz
          mv pkg-list.json bionic-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel --release $RELEASE push focal-oneclient.tar.gz
          mv pkg-list.json focal-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel --release $RELEASE push jammy-oneclient.tar.gz
          mv pkg-list.json jammy-oneclient-pkg-list.json
        else
          ./pkg.py --host docker_packages_devel push centos7-oneclient.tar.gz
          mv pkg-list.json centos7-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel push trusty-oneclient.tar.gz
          mv pkg-list.json trusty-oneclient-pkg-list.json
          ./pkg.py --host docker_packages_devel push xenial-oneclient.tar.gz
          mv pkg-list.json xenial-oneclient-pkg-list.json
        fi
      description: Publish
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: centos7-oneclient-pkg-list.json
    pattern: centos7-oneclient-pkg-list.json
    shared: true
    required: false
  - name: trusty-oneclient-pkg-list.json
    pattern: trusty-oneclient-pkg-list.json
    shared: true
    required: false
  - name: xenial-oneclient-pkg-list.json
    pattern: xenial-oneclient-pkg-list.json
    shared: true
    required: false
  - name: bionic-oneclient-pkg-list.json
    pattern: bionic-oneclient-pkg-list.json
    shared: true
    required: false
  - name: focal-oneclient-pkg-list.json
    pattern: focal-oneclient-pkg-list.json
    shared: true
    required: false
  - name: jammy-oneclient-pkg-list.json
    pattern: jammy-oneclient-pkg-list.json
    shared: true
    required: false
  requirements:
  - publish_packages
  - onedata-quick
  artifact-subscriptions:
  - artifact: trusty-oneclient.tar.gz
  - artifact: centos7-oneclient.tar.gz
  - artifact: xenial-oneclient.tar.gz
  - artifact: bionic-oneclient.tar.gz
  - artifact: focal-oneclient.tar.gz
  - artifact: jammy-oneclient.tar.gz
Publish Oneclient docker:
  key: POD
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        clover:
          useLocalLicenseKey: 'true'
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        # initialize submodules to get default packages versions
        git remote set-url origin ${bamboo.repository.git.repositoryUrl}
        git remote -v
        make submodules

        ONECLIENT_VERSION=$bamboo_ONECLIENT_VERSION make oneclient_dockers
      description: Publish Oneclient and OneS3 dockers
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        mkdir oneclient_images
        ls -l
        ls -l oneclient
        cp oneclient/docker-build-list.json oneclient_images/oc-docker-build-list.json
        cp oneclient/docker-ones3-build-list.json oneclient_images/os3-docker-build-list.json
        cp oneclient/docker-dev-build-list.json oneclient_images/oc-docker-dev-build-list.json
        cp oneclient/docker-dev-ones3-build-list.json oneclient_images/os3-docker-dev-build-list.json
        tar -czf oneclient_docker_build.tar.gz oneclient_images/
      description: Package Oneclient and OneS3 docker image build reports
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        ./bamboos/artifacts/push_artifact.py --hostname ${bamboo.artifactRepoHostname} --port ${bamboo.artifactRepoPort} \
            --username ${bamboo.artifactRepoUsername} --branch ${bamboo.planRepository.branchName} --plan oneclient_docker_build \
            --artifact oneclient_docker_build.tar.gz
      description: Push artifact
  final-tasks:
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: oc-docker-build-report.txt
    pattern: docker-build-report.txt
    shared: true
    required: false
  - name: oc-docker-build-list.json
    pattern: docker-build-list.json
    shared: true
    required: false
  - name: oc-docker-dev-build-list.json
    pattern: docker-dev-build-list.json
    shared: true
    required: false
  - name: oc-docker-dev-build-report.txt
    pattern: docker-dev-build-report.txt
    shared: true
    required: false
  - name: os3-docker-build-list.json
    pattern: docker-ones3-build-list.json
    shared: true
    required: false
  - name: os3-docker-build-report.txt
    pattern: docker-ones3-build-report.txt
    shared: true
    required: false
  - name: os3-docker-dev-build-list.json
    pattern: docker-dev-ones3-build-list.json
    shared: true
    required: false
  - name: os3-docker-dev-build-report.txt
    pattern: docker-dev-ones3-build-report.txt
    shared: true
    required: false
  requirements:
  - onedata
  artifact-subscriptions: []
# variables:
  # CLUSTER_MANAGER_VERSION: ''
  # ONECLIENT_VERSION: ''
  # ONEPROVIDER_VERSION: ''
  # OP_PANEL_VERSION: ''
  # OP_WORKER_VERSION: ''
repositories:
- oneclient-pkg:
    scope: global
branches:
  create:
    for-new-branch: release/.*
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
notifications:
- events:
  - plan-completed
  recipients:
  - users:
    - plgnikolow
labels: []
dependencies:
  require-all-stages-passing: false
  enabled-for-branches: true
  block-strategy: none
  plans:
  - ODSRV-K8SD
  - ODSRV-UP
  - ODSRV-OAP
  - ODSRV-MAOPT
other:
  concurrent-build-plugin: system-default
---
version: 2
plan:
  key: ODSRV-OPV
plan-permissions:
- users:
  - plgkryza
  groups:
  - plggveildev
  permissions:
  - view
  - edit
  - build
  - clone
  - admin
...
